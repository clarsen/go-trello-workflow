scalar Timestamp

type BoardList {
  board: String!
  list: String!
}

type Task {
  id: String!
  title: String!
  createdDate: Timestamp
  url: String
  due: Timestamp
  list: BoardList
  period: String
  dateLastActivity: Timestamp
  desc: String!
  checklistItems: [String!]
}

input BoardListInput {
  board: String!
  list: String!
}

type WeeklyGoal {
  idCard: String!
  idCheckitem: String!
  title: String!
  tasks: [Task]
  year: Int
  month: Int
  week: Int
  done: Boolean
  status: String
}

type MonthlyGoal {
  idCard: ID
  title: String!
  weeklyGoals: [WeeklyGoal!]
}

type Timer {
  id: String!
  title: String!
}

type Query {
  tasks(dueBefore: Int, inBoardList: BoardListInput): [Task!]
  weeklyVisualization(year: Int, week: Int): String
  monthlyVisualization(year: Int, month: Int): String
  monthlyGoals: [MonthlyGoal!]
  activeTimer: Timer
}

type GenerateResult {
  message: String
  ok: Boolean!
}

type FinishResult {
  message: String
  ok: Boolean!
}

type Mutation {
  prepareWeeklyReview(year: Int, week: Int): GenerateResult!
  finishWeeklyReview(year: Int, week: Int): FinishResult!
  setDueDate(taskID: String!, due: Timestamp!): Task!
  setDone(taskID: String!, done: Boolean!, status: String, titleComment: String, nextDue: Timestamp): Task!
  moveTaskToList(taskID: String!, list: BoardListInput!): Task!
  startTimer(taskID: String!, checkitemID: String): Timer!
  stopTimer(timerID: String!): Boolean
  addComment(taskID: String!, comment: String!): Task!
  
  setGoalDone(taskID: String!, checkitemID: String!, done: Boolean!, status: String): [MonthlyGoal!]
  addTask(title: String!, board: String, list: String): Task!
  addWeeklyGoal(taskID: ID!, title: String!, week: Int!): [MonthlyGoal!]
  addMonthlyGoal(title: String!): [MonthlyGoal!]

  prepareMonthlyReview(year: Int, month: Int): GenerateResult!
  finishMonthlyReview(year: Int, month: Int): FinishResult!
}
